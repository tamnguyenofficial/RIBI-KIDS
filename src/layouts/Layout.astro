---
import { type SiteConfig, type CustomImage } from 'types';
import Footer from '@components/Footer.astro';
import Header from '@components/Header.astro';
import { fetchData } from '@data/siteConfig';

import '../styles/globals.css';

interface Props {
  title: string;
  addTitleSuffix?: boolean;
  description?: string;
  image?: CustomImage;
}

const { addTitleSuffix, description, image } = Astro.props;

const configData: SiteConfig = (await fetchData()) || {};
const titleSuffix = configData.titleSuffix && addTitleSuffix !== false ? configData.titleSuffix : undefined;
const title = [Astro.props.title, titleSuffix].filter(Boolean).join(' ');
const resolvedImage = image?.src ? { src: new URL(image.src, Astro.site).toString() } : undefined;
const canonicalURL = new URL(Astro.request.url, Astro.site);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>
    {description && <meta name="description" content={description} />}
    {resolvedImage && <meta property="og:image" content={resolvedImage.src} />}
    <link rel="stylesheet" href="/styles/globals.css" />
<link href="https://fonts.googleapis.com/css2?family=Quicksand:wght@400;600;700&display=swap" rel="stylesheet" />
</head>
  <body class="pastel-bg text-base text-gray-700 font-quicksand">
    <Header />
    <main class="px-4 py-6 max-w-6xl mx-auto">
      <slot />
    </main>
    <Footer />
  </body>
</html>
